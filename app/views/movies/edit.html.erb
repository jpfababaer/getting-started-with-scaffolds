<!--15 Reusing forms: the UPDATE form from /movies/show. SEARCH app/models/book.rb-->

<div>
  <div>
    <h2>
      Edit movie
    </h2>


    <form action="/movies/<%= @the_movie.id %>"  method="post" data-turbo="false">

    <!--7 In this form, we should create some CSRF anti-measures as well.-->
      <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">

      <!--8 Now we need to add more tricks since HTML can NOT send PATCH requests. The rest is back-end RAILS magic to make the update feature work. SEARCH routes.rb -->
      <input type="hidden" name="_method" value="patch">


      <div>
        <label for="title_box">
          Title
        </label>

        <input type="text" id="title_box" name="query_title" value="<%= @the_movie.title %>">
      </div>

      <div>
        <label for="description_box">
          Description
        </label>

        <textarea id="description_box" name="query_description"><%= @the_movie.description %></textarea>
      </div>

      <div>
        <input type="checkbox" id="released_box" name="query_released" value="1" <%= "checked" if @the_movie.released %>>

        <label for="released_box">
            Released
        </label>
      </div>

      <button>
        Update movie
      </button>
    </form>
  </div>
</div>
